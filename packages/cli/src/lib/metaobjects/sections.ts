import {MetaobjectDefinition} from './types-admin-api.js';
import {joinPath} from '@shopify/cli-kit/node/path';
import {writeFile} from '@shopify/cli-kit/node/fs';
import {formatCode} from '../format-code.js';

export async function generateSectionsComponent(
  metaobjectDefinitions: Record<
    string,
    MetaobjectDefinition | undefined | null
  >,
  appDirectory: string,
) {
  console.log('GENERATING Sections.tsx');
  const sectionsPath = joinPath(appDirectory, 'sections', 'Sections.tsx');
  const componentImports: string[] = [];
  const typeImports: string[] = [];
  const sectionTypes: string[] = [];
  const switchCases: string[] = [];

  for (const [key, value] of Object.entries(metaobjectDefinitions)) {
    if (!value) continue;

    const componentName = value.name
      .replace(/^Section \| /g, '')
      .replace(/\s+/g, '');

    const fragmentTypeName = `${componentName}Fragment`;

    componentImports.push(
      `import {${componentName}} from './${componentName}';`,
    );
    typeImports.push(`${fragmentTypeName},`);
    sectionTypes.push(fragmentTypeName);
    switchCases.push(
      `case 'section_${key}':\n  return <${componentName} {...section} key={section.id} />;`,
    );
  }

  const content = template
    .replace('#ComponentImports#', componentImports.join('\n'))
    .replace('#TypeImports#', typeImports.join('\n'))
    .replace('#SectionTypes#', sectionTypes.join(' | '))
    .replace('#SwitchCases#', switchCases.join('\n'));

  await writeFile(sectionsPath, formatCode(content, undefined, sectionsPath));
}

const template = `
/*
 * This component is autogenerated. Do not modify it manually.
 */

#ComponentImports#
import type {
#TypeImports#
} from 'storefrontapi.generated';

export type SectionTypes = #SectionTypes#;
export type RouteSections = Array<SectionTypes>;

export function Sections({sections}: {sections: Array<SectionTypes>}) {
  return (
    <>
      {sections.map((section) => {
        switch (section.type) {
          #SwitchCases#
          default:
            return null;
        }
      })}
    </>
  );
}
`;
